"""Added bugs and products tables

Revision ID: a540f78d248e
Revises: 5b0026fe4f47
Create Date: 2025-04-21 11:00:48.051611

"""
from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a540f78d248e"
down_revision: str | None = "5b0026fe4f47"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("permissions",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=100), nullable=False),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name", name="uq_permission_name"),
    )
    op.create_index(op.f("ix_permissions_id"), "permissions", ["id"], unique=False)
    op.create_table("roles",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=50), nullable=False),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("is_system", sa.Boolean(), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name", name="uq_role_name"),
    )
    op.create_index(op.f("ix_roles_id"), "roles", ["id"], unique=False)
    op.create_index(op.f("ix_roles_name"), "roles", ["name"], unique=False)
    op.create_table("tags",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=50), nullable=False),
    sa.Column("color", sa.String(length=7), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name"),
    sa.UniqueConstraint("name", name="uq_tag_name"),
    )
    op.create_table("role_permissions",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("role_id", sa.Integer(), nullable=False),
    sa.Column("permission_id", sa.Integer(), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(["permission_id"], ["permissions.id"], name="fk_rolepermission_permission", ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["role_id"], ["roles.id"], name="fk_rolepermission_role", ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("role_id", "permission_id", name="uq_role_permission"),
    )
    op.create_index(op.f("ix_role_permissions_permission_id"), "role_permissions", ["permission_id"], unique=False)
    op.create_index(op.f("ix_role_permissions_role_id"), "role_permissions", ["role_id"], unique=False)
    op.create_table("activation_keys",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("user_id", sa.Integer(), nullable=False),
    sa.Column("key", sa.String(length=128), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("used_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("user_id", name="uq_user_activation"),
    )
    op.create_index(op.f("ix_activation_keys_id"), "activation_keys", ["id"], unique=False)
    op.create_index(op.f("ix_activation_keys_key"), "activation_keys", ["key"], unique=True)
    op.create_index("ix_active_keys", "activation_keys", ["user_id", "is_active"], unique=False)
    op.create_index("ix_key_expires", "activation_keys", ["key", "expires_at"], unique=False)
    op.create_table("categories",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=100), nullable=False),
    sa.Column("slug", sa.String(length=120), nullable=True),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("created_by", sa.Integer(), nullable=True),
    sa.Column("updated_by", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["created_by"], ["users.id"] ),
    sa.ForeignKeyConstraint(["updated_by"], ["users.id"] ),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name"),
    sa.UniqueConstraint("slug"),
    )
    op.create_index("ix_category_active_name", "categories", ["is_active", "name"], unique=False)
    op.create_index("ix_category_name", "categories", ["name"], unique=False)
    op.create_table("products",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=100), nullable=False),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("category_id", sa.Integer(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(["category_id"], ["categories.id"], ondelete="SET NULL"),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name"),
    )
    op.create_index("ix_product_name", "products", ["name"], unique=False)
    op.create_table("components",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=100), nullable=False),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("product_id", sa.Integer(), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(["product_id"], ["products.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name", "product_id", name="uix_component_per_product"),
    )
    op.create_index("ix_component_name", "components", ["name"], unique=False)
    op.create_index("ix_component_product_id", "components", ["product_id"], unique=False)
    op.create_table("versions",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=50), nullable=False),
    sa.Column("description", sa.String(length=255), nullable=True),
    sa.Column("product_id", sa.Integer(), nullable=False),
    sa.Column("is_active", sa.Boolean(), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("release_date", sa.DateTime(timezone=True), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.ForeignKeyConstraint(["product_id"], ["products.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("name", "product_id", name="uix_version_per_product"),
    )
    op.create_table("bugs",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("title", sa.String(length=255), nullable=False),
    sa.Column("description", sa.Text(), nullable=True),
    sa.Column("status", sa.Enum("NEW", "ASSIGNED", "FIXED", "VERIFIED", "CLOSED", name="bugstatus"), nullable=False),
    sa.Column("priority", sa.Enum("LOW", "MEDIUM", "HIGH", "CRITICAL", name="bugpriority"), nullable=False),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("reporter_id", sa.Integer(), nullable=True),
    sa.Column("assignee_id", sa.Integer(), nullable=True),
    sa.Column("product_id", sa.Integer(), nullable=False),
    sa.Column("component_id", sa.Integer(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("version_id", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["assignee_id"], ["users.id"], ondelete="SET NULL"),
    sa.ForeignKeyConstraint(["component_id"], ["components.id"], ondelete="SET NULL"),
    sa.ForeignKeyConstraint(["product_id"], ["products.id"], ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["reporter_id"], ["users.id"], ondelete="SET NULL"),
    sa.ForeignKeyConstraint(["version_id"], ["versions.id"], ondelete="SET NULL"),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_bug_assignee", "bugs", ["assignee_id"], unique=False)
    op.create_index("ix_bug_priority", "bugs", ["priority"], unique=False)
    op.create_index("ix_bug_product_component", "bugs", ["product_id", "component_id"], unique=False)
    op.create_index("ix_bug_status", "bugs", ["status"], unique=False)
    op.create_table("attachments",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("filename", sa.String(), nullable=False),
    sa.Column("file_path", sa.String(), nullable=False),
    sa.Column("mime_type", sa.String(), nullable=True),
    sa.Column("file_size", sa.Integer(), nullable=True),
    sa.Column("version", sa.Integer(), nullable=False),
    sa.Column("is_latest", sa.Boolean(), nullable=False),
    sa.Column("uploaded_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("bug_id", sa.Integer(), nullable=False),
    sa.Column("uploaded_by_id", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["bug_id"], ["bugs.id"], ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["uploaded_by_id"], ["users.id"], ondelete="SET NULL"),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_attachment_bug_version", "attachments", ["bug_id", "version"], unique=False)
    op.create_index(op.f("ix_attachments_filename"), "attachments", ["filename"], unique=False)
    op.create_table("bug_tags",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("bug_id", sa.Integer(), nullable=True),
    sa.Column("tag_id", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["bug_id"], ["bugs.id"], ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_table("comments",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("content", sa.Text(), nullable=False),
    sa.Column("is_private", sa.Boolean(), nullable=True),
    sa.Column("parent_id", sa.Integer(), nullable=True),
    sa.Column("bug_id", sa.Integer(), nullable=False),
    sa.Column("author_id", sa.Integer(), nullable=True),
    sa.Column("is_deleted", sa.Boolean(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(["author_id"], ["users.id"], ondelete="SET NULL"),
    sa.ForeignKeyConstraint(["bug_id"], ["bugs.id"], ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["parent_id"], ["comments.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_comment_author_id", "comments", ["author_id"], unique=False)
    op.create_index("ix_comment_bug_id", "comments", ["bug_id"], unique=False)
    op.create_index("ix_comment_visibility", "comments", ["is_private"], unique=False)
    op.add_column("users", sa.Column("full_name", sa.String(), nullable=True))
    op.add_column("users", sa.Column("role_id", sa.Integer(), nullable=False))
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("is_deleted", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("last_login", sa.DateTime(timezone=True), nullable=True))
    op.add_column("users", sa.Column("login_attempts", sa.Integer(), nullable=True))
    op.alter_column("users", "created_at",
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text("now()"))
    op.drop_index("ix_users_email", table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_index("uq_users_email_active", "users", ["email"], unique=True, postgresql_where=sa.text("NOT is_deleted"))
    op.create_foreign_key(None, "users", "roles", ["role_id"], ["id"])
    op.drop_column("users", "name")
    op.drop_column("users", "role")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("role", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column("users", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_index("uq_users_email_active", table_name="users", postgresql_where=sa.text("NOT is_deleted"))
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    op.alter_column("users", "created_at",
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text("now()"))
    op.drop_column("users", "login_attempts")
    op.drop_column("users", "last_login")
    op.drop_column("users", "is_deleted")
    op.drop_column("users", "is_active")
    op.drop_column("users", "role_id")
    op.drop_column("users", "full_name")
    op.drop_index("ix_comment_visibility", table_name="comments")
    op.drop_index("ix_comment_bug_id", table_name="comments")
    op.drop_index("ix_comment_author_id", table_name="comments")
    op.drop_table("comments")
    op.drop_table("bug_tags")
    op.drop_index(op.f("ix_attachments_filename"), table_name="attachments")
    op.drop_index("ix_attachment_bug_version", table_name="attachments")
    op.drop_table("attachments")
    op.drop_index("ix_bug_status", table_name="bugs")
    op.drop_index("ix_bug_product_component", table_name="bugs")
    op.drop_index("ix_bug_priority", table_name="bugs")
    op.drop_index("ix_bug_assignee", table_name="bugs")
    op.drop_table("bugs")
    op.drop_table("versions")
    op.drop_index("ix_component_product_id", table_name="components")
    op.drop_index("ix_component_name", table_name="components")
    op.drop_table("components")
    op.drop_index("ix_product_name", table_name="products")
    op.drop_table("products")
    op.drop_index("ix_category_name", table_name="categories")
    op.drop_index("ix_category_active_name", table_name="categories")
    op.drop_table("categories")
    op.drop_index("ix_key_expires", table_name="activation_keys")
    op.drop_index("ix_active_keys", table_name="activation_keys")
    op.drop_index(op.f("ix_activation_keys_key"), table_name="activation_keys")
    op.drop_index(op.f("ix_activation_keys_id"), table_name="activation_keys")
    op.drop_table("activation_keys")
    op.drop_index(op.f("ix_role_permissions_role_id"), table_name="role_permissions")
    op.drop_index(op.f("ix_role_permissions_permission_id"), table_name="role_permissions")
    op.drop_table("role_permissions")
    op.drop_table("tags")
    op.drop_index(op.f("ix_roles_name"), table_name="roles")
    op.drop_index(op.f("ix_roles_id"), table_name="roles")
    op.drop_table("roles")
    op.drop_index(op.f("ix_permissions_id"), table_name="permissions")
    op.drop_table("permissions")
    # ### end Alembic commands ###
